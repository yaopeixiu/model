package com.example.demo0116.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class LocationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table location
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table location
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table location
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public LocationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public LocationExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public LocationExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LocationExample example = new LocationExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public LocationExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbg.generated
     */
    public LocationExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table location
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLocationIdIsNull() {
            addCriterion("location_id is null");
            return (Criteria) this;
        }

        public Criteria andLocationIdIsNotNull() {
            addCriterion("location_id is not null");
            return (Criteria) this;
        }

        public Criteria andLocationIdEqualTo(Integer value) {
            addCriterion("location_id =", value, "locationId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andLocationIdEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("location_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationIdNotEqualTo(Integer value) {
            addCriterion("location_id <>", value, "locationId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andLocationIdNotEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("location_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationIdGreaterThan(Integer value) {
            addCriterion("location_id >", value, "locationId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andLocationIdGreaterThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("location_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("location_id >=", value, "locationId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andLocationIdGreaterThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("location_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationIdLessThan(Integer value) {
            addCriterion("location_id <", value, "locationId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andLocationIdLessThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("location_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationIdLessThanOrEqualTo(Integer value) {
            addCriterion("location_id <=", value, "locationId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andLocationIdLessThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("location_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationIdIn(List<Integer> values) {
            addCriterion("location_id in", values, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdNotIn(List<Integer> values) {
            addCriterion("location_id not in", values, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdBetween(Integer value1, Integer value2) {
            addCriterion("location_id between", value1, value2, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdNotBetween(Integer value1, Integer value2) {
            addCriterion("location_id not between", value1, value2, "locationId");
            return (Criteria) this;
        }

        public Criteria andStartLongitudeIsNull() {
            addCriterion("start_longitude is null");
            return (Criteria) this;
        }

        public Criteria andStartLongitudeIsNotNull() {
            addCriterion("start_longitude is not null");
            return (Criteria) this;
        }

        public Criteria andStartLongitudeEqualTo(BigDecimal value) {
            addCriterion("start_longitude =", value, "startLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLongitudeEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_longitude = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLongitudeNotEqualTo(BigDecimal value) {
            addCriterion("start_longitude <>", value, "startLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLongitudeNotEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_longitude <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLongitudeGreaterThan(BigDecimal value) {
            addCriterion("start_longitude >", value, "startLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLongitudeGreaterThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_longitude > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLongitudeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("start_longitude >=", value, "startLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLongitudeGreaterThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_longitude >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLongitudeLessThan(BigDecimal value) {
            addCriterion("start_longitude <", value, "startLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLongitudeLessThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_longitude < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLongitudeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("start_longitude <=", value, "startLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLongitudeLessThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_longitude <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLongitudeIn(List<BigDecimal> values) {
            addCriterion("start_longitude in", values, "startLongitude");
            return (Criteria) this;
        }

        public Criteria andStartLongitudeNotIn(List<BigDecimal> values) {
            addCriterion("start_longitude not in", values, "startLongitude");
            return (Criteria) this;
        }

        public Criteria andStartLongitudeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("start_longitude between", value1, value2, "startLongitude");
            return (Criteria) this;
        }

        public Criteria andStartLongitudeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("start_longitude not between", value1, value2, "startLongitude");
            return (Criteria) this;
        }

        public Criteria andStartLatitudeIsNull() {
            addCriterion("start_latitude is null");
            return (Criteria) this;
        }

        public Criteria andStartLatitudeIsNotNull() {
            addCriterion("start_latitude is not null");
            return (Criteria) this;
        }

        public Criteria andStartLatitudeEqualTo(BigDecimal value) {
            addCriterion("start_latitude =", value, "startLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLatitudeEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_latitude = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLatitudeNotEqualTo(BigDecimal value) {
            addCriterion("start_latitude <>", value, "startLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLatitudeNotEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_latitude <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLatitudeGreaterThan(BigDecimal value) {
            addCriterion("start_latitude >", value, "startLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLatitudeGreaterThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_latitude > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLatitudeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("start_latitude >=", value, "startLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLatitudeGreaterThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_latitude >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLatitudeLessThan(BigDecimal value) {
            addCriterion("start_latitude <", value, "startLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLatitudeLessThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_latitude < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLatitudeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("start_latitude <=", value, "startLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andStartLatitudeLessThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("start_latitude <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartLatitudeIn(List<BigDecimal> values) {
            addCriterion("start_latitude in", values, "startLatitude");
            return (Criteria) this;
        }

        public Criteria andStartLatitudeNotIn(List<BigDecimal> values) {
            addCriterion("start_latitude not in", values, "startLatitude");
            return (Criteria) this;
        }

        public Criteria andStartLatitudeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("start_latitude between", value1, value2, "startLatitude");
            return (Criteria) this;
        }

        public Criteria andStartLatitudeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("start_latitude not between", value1, value2, "startLatitude");
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeIsNull() {
            addCriterion("desination_longitude is null");
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeIsNotNull() {
            addCriterion("desination_longitude is not null");
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeEqualTo(BigDecimal value) {
            addCriterion("desination_longitude =", value, "desinationLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDesinationLongitudeEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("desination_longitude = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeNotEqualTo(BigDecimal value) {
            addCriterion("desination_longitude <>", value, "desinationLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDesinationLongitudeNotEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("desination_longitude <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeGreaterThan(BigDecimal value) {
            addCriterion("desination_longitude >", value, "desinationLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDesinationLongitudeGreaterThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("desination_longitude > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("desination_longitude >=", value, "desinationLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDesinationLongitudeGreaterThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("desination_longitude >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeLessThan(BigDecimal value) {
            addCriterion("desination_longitude <", value, "desinationLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDesinationLongitudeLessThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("desination_longitude < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("desination_longitude <=", value, "desinationLongitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDesinationLongitudeLessThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("desination_longitude <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeIn(List<BigDecimal> values) {
            addCriterion("desination_longitude in", values, "desinationLongitude");
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeNotIn(List<BigDecimal> values) {
            addCriterion("desination_longitude not in", values, "desinationLongitude");
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("desination_longitude between", value1, value2, "desinationLongitude");
            return (Criteria) this;
        }

        public Criteria andDesinationLongitudeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("desination_longitude not between", value1, value2, "desinationLongitude");
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeIsNull() {
            addCriterion("destination_latitude is null");
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeIsNotNull() {
            addCriterion("destination_latitude is not null");
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeEqualTo(BigDecimal value) {
            addCriterion("destination_latitude =", value, "destinationLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDestinationLatitudeEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("destination_latitude = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeNotEqualTo(BigDecimal value) {
            addCriterion("destination_latitude <>", value, "destinationLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDestinationLatitudeNotEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("destination_latitude <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeGreaterThan(BigDecimal value) {
            addCriterion("destination_latitude >", value, "destinationLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDestinationLatitudeGreaterThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("destination_latitude > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("destination_latitude >=", value, "destinationLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDestinationLatitudeGreaterThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("destination_latitude >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeLessThan(BigDecimal value) {
            addCriterion("destination_latitude <", value, "destinationLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDestinationLatitudeLessThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("destination_latitude < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("destination_latitude <=", value, "destinationLatitude");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andDestinationLatitudeLessThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("destination_latitude <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeIn(List<BigDecimal> values) {
            addCriterion("destination_latitude in", values, "destinationLatitude");
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeNotIn(List<BigDecimal> values) {
            addCriterion("destination_latitude not in", values, "destinationLatitude");
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("destination_latitude between", value1, value2, "destinationLatitude");
            return (Criteria) this;
        }

        public Criteria andDestinationLatitudeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("destination_latitude not between", value1, value2, "destinationLatitude");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNull() {
            addCriterion("order_id is null");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNotNull() {
            addCriterion("order_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrderIdEqualTo(Integer value) {
            addCriterion("order_id =", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andOrderIdEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdNotEqualTo(Integer value) {
            addCriterion("order_id <>", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andOrderIdNotEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThan(Integer value) {
            addCriterion("order_id >", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_id >=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThan(Integer value) {
            addCriterion("order_id <", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanColumn(Location.Column column) {
            addCriterion(new StringBuilder("order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("order_id <=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanOrEqualToColumn(Location.Column column) {
            addCriterion(new StringBuilder("order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdIn(List<Integer> values) {
            addCriterion("order_id in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotIn(List<Integer> values) {
            addCriterion("order_id not in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("order_id between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("order_id not between", value1, value2, "orderId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table location
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table location
         *
         * @mbg.generated
         */
        private LocationExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        protected Criteria(LocationExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public LocationExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table location
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table location
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table location
         *
         * @mbg.generated
         */
        void example(com.example.demo0116.domain.LocationExample example);
    }
}