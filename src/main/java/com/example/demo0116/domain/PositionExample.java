package com.example.demo0116.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class PositionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table position
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table position
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table position
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public PositionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public PositionExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public PositionExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        PositionExample example = new PositionExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public PositionExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table position
     *
     * @mbg.generated
     */
    public PositionExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table position
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Position.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Position.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLongitudesIsNull() {
            addCriterion("longitudes is null");
            return (Criteria) this;
        }

        public Criteria andLongitudesIsNotNull() {
            addCriterion("longitudes is not null");
            return (Criteria) this;
        }

        public Criteria andLongitudesEqualTo(BigDecimal value) {
            addCriterion("longitudes =", value, "longitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLongitudesEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("longitudes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongitudesNotEqualTo(BigDecimal value) {
            addCriterion("longitudes <>", value, "longitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLongitudesNotEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("longitudes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongitudesGreaterThan(BigDecimal value) {
            addCriterion("longitudes >", value, "longitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLongitudesGreaterThanColumn(Position.Column column) {
            addCriterion(new StringBuilder("longitudes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongitudesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("longitudes >=", value, "longitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLongitudesGreaterThanOrEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("longitudes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongitudesLessThan(BigDecimal value) {
            addCriterion("longitudes <", value, "longitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLongitudesLessThanColumn(Position.Column column) {
            addCriterion(new StringBuilder("longitudes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongitudesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("longitudes <=", value, "longitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLongitudesLessThanOrEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("longitudes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongitudesIn(List<BigDecimal> values) {
            addCriterion("longitudes in", values, "longitudes");
            return (Criteria) this;
        }

        public Criteria andLongitudesNotIn(List<BigDecimal> values) {
            addCriterion("longitudes not in", values, "longitudes");
            return (Criteria) this;
        }

        public Criteria andLongitudesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("longitudes between", value1, value2, "longitudes");
            return (Criteria) this;
        }

        public Criteria andLongitudesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("longitudes not between", value1, value2, "longitudes");
            return (Criteria) this;
        }

        public Criteria andLatitudesIsNull() {
            addCriterion("latitudes is null");
            return (Criteria) this;
        }

        public Criteria andLatitudesIsNotNull() {
            addCriterion("latitudes is not null");
            return (Criteria) this;
        }

        public Criteria andLatitudesEqualTo(BigDecimal value) {
            addCriterion("latitudes =", value, "latitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLatitudesEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("latitudes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLatitudesNotEqualTo(BigDecimal value) {
            addCriterion("latitudes <>", value, "latitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLatitudesNotEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("latitudes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLatitudesGreaterThan(BigDecimal value) {
            addCriterion("latitudes >", value, "latitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLatitudesGreaterThanColumn(Position.Column column) {
            addCriterion(new StringBuilder("latitudes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLatitudesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("latitudes >=", value, "latitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLatitudesGreaterThanOrEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("latitudes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLatitudesLessThan(BigDecimal value) {
            addCriterion("latitudes <", value, "latitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLatitudesLessThanColumn(Position.Column column) {
            addCriterion(new StringBuilder("latitudes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLatitudesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("latitudes <=", value, "latitudes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria andLatitudesLessThanOrEqualToColumn(Position.Column column) {
            addCriterion(new StringBuilder("latitudes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLatitudesIn(List<BigDecimal> values) {
            addCriterion("latitudes in", values, "latitudes");
            return (Criteria) this;
        }

        public Criteria andLatitudesNotIn(List<BigDecimal> values) {
            addCriterion("latitudes not in", values, "latitudes");
            return (Criteria) this;
        }

        public Criteria andLatitudesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("latitudes between", value1, value2, "latitudes");
            return (Criteria) this;
        }

        public Criteria andLatitudesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("latitudes not between", value1, value2, "latitudes");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table position
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table position
         *
         * @mbg.generated
         */
        private PositionExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        protected Criteria(PositionExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public PositionExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table position
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table position
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table position
         *
         * @mbg.generated
         */
        void example(com.example.demo0116.domain.PositionExample example);
    }
}